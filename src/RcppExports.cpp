// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// installation_kami_testing
void installation_kami_testing();
RcppExport SEXP _RcppKamiClusterTesting_installation_kami_testing() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    installation_kami_testing();
    return R_NilValue;
END_RCPP
}
// kami_testing
void kami_testing();
RcppExport SEXP _RcppKamiClusterTesting_kami_testing() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    kami_testing();
    return R_NilValue;
END_RCPP
}
// FMSGWR_ESC_kami_testing
Rcpp::List FMSGWR_ESC_kami_testing(Rcpp::NumericMatrix y_points, Rcpp::NumericVector t_points, double left_extreme_domain, double right_extreme_domain, Rcpp::NumericMatrix coeff_y_points, Rcpp::NumericVector knots_y_points, Rcpp::Nullable<int> degree_basis_y_points, Rcpp::Nullable<int> n_basis_y_points, Rcpp::NumericMatrix coeff_rec_weights_y_points, Rcpp::Nullable<int> degree_basis_rec_weights_y_points, Rcpp::Nullable<int> n_basis_rec_weights_y_points, Rcpp::List coeff_stationary_cov, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_stationary_cov, Rcpp::NumericVector knots_stationary_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_stationary_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_stationary_cov, Rcpp::NumericVector penalization_stationary_cov, Rcpp::NumericVector knots_beta_stationary_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_beta_stationary_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_beta_stationary_cov, Rcpp::List coeff_events_cov, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_events_cov, Rcpp::NumericVector knots_events_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_events_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_events_cov, Rcpp::NumericVector penalization_events_cov, Rcpp::NumericMatrix coordinates_events, double kernel_bandwith_events, Rcpp::NumericVector knots_beta_events_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_beta_events_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_beta_events_cov, Rcpp::List coeff_stations_cov, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_stations_cov, Rcpp::NumericVector knots_stations_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_stations_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_stations_cov, Rcpp::NumericVector penalization_stations_cov, Rcpp::NumericMatrix coordinates_stations, double kernel_bandwith_stations, Rcpp::NumericVector knots_beta_stations_cov, Rcpp::Nullable<Rcpp::IntegerVector> degrees_basis_beta_stations_cov, Rcpp::Nullable<Rcpp::IntegerVector> n_basis_beta_stations_cov, bool bf_estimation, int n_knots_smoothing, int n_intervals_trapezoidal_quadrature, double target_error_trapezoidal_quadrature, int max_iterations_trapezoidal_quadrature, Rcpp::Nullable<int> num_threads, std::string basis_type_y_points, std::string basis_type_rec_weights_y_points, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_beta_stationary_cov, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_beta_events_cov, Rcpp::Nullable<Rcpp::CharacterVector> basis_types_beta_stations_cov);
RcppExport SEXP _RcppKamiClusterTesting_FMSGWR_ESC_kami_testing(SEXP y_pointsSEXP, SEXP t_pointsSEXP, SEXP left_extreme_domainSEXP, SEXP right_extreme_domainSEXP, SEXP coeff_y_pointsSEXP, SEXP knots_y_pointsSEXP, SEXP degree_basis_y_pointsSEXP, SEXP n_basis_y_pointsSEXP, SEXP coeff_rec_weights_y_pointsSEXP, SEXP degree_basis_rec_weights_y_pointsSEXP, SEXP n_basis_rec_weights_y_pointsSEXP, SEXP coeff_stationary_covSEXP, SEXP basis_types_stationary_covSEXP, SEXP knots_stationary_covSEXP, SEXP degrees_basis_stationary_covSEXP, SEXP n_basis_stationary_covSEXP, SEXP penalization_stationary_covSEXP, SEXP knots_beta_stationary_covSEXP, SEXP degrees_basis_beta_stationary_covSEXP, SEXP n_basis_beta_stationary_covSEXP, SEXP coeff_events_covSEXP, SEXP basis_types_events_covSEXP, SEXP knots_events_covSEXP, SEXP degrees_basis_events_covSEXP, SEXP n_basis_events_covSEXP, SEXP penalization_events_covSEXP, SEXP coordinates_eventsSEXP, SEXP kernel_bandwith_eventsSEXP, SEXP knots_beta_events_covSEXP, SEXP degrees_basis_beta_events_covSEXP, SEXP n_basis_beta_events_covSEXP, SEXP coeff_stations_covSEXP, SEXP basis_types_stations_covSEXP, SEXP knots_stations_covSEXP, SEXP degrees_basis_stations_covSEXP, SEXP n_basis_stations_covSEXP, SEXP penalization_stations_covSEXP, SEXP coordinates_stationsSEXP, SEXP kernel_bandwith_stationsSEXP, SEXP knots_beta_stations_covSEXP, SEXP degrees_basis_beta_stations_covSEXP, SEXP n_basis_beta_stations_covSEXP, SEXP bf_estimationSEXP, SEXP n_knots_smoothingSEXP, SEXP n_intervals_trapezoidal_quadratureSEXP, SEXP target_error_trapezoidal_quadratureSEXP, SEXP max_iterations_trapezoidal_quadratureSEXP, SEXP num_threadsSEXP, SEXP basis_type_y_pointsSEXP, SEXP basis_type_rec_weights_y_pointsSEXP, SEXP basis_types_beta_stationary_covSEXP, SEXP basis_types_beta_events_covSEXP, SEXP basis_types_beta_stations_covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type y_points(y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t_points(t_pointsSEXP);
    Rcpp::traits::input_parameter< double >::type left_extreme_domain(left_extreme_domainSEXP);
    Rcpp::traits::input_parameter< double >::type right_extreme_domain(right_extreme_domainSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coeff_y_points(coeff_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_y_points(knots_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type degree_basis_y_points(degree_basis_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type n_basis_y_points(n_basis_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coeff_rec_weights_y_points(coeff_rec_weights_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type degree_basis_rec_weights_y_points(degree_basis_rec_weights_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type n_basis_rec_weights_y_points(n_basis_rec_weights_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_stationary_cov(coeff_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_stationary_cov(basis_types_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_stationary_cov(knots_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_stationary_cov(degrees_basis_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_stationary_cov(n_basis_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type penalization_stationary_cov(penalization_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_beta_stationary_cov(knots_beta_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_beta_stationary_cov(degrees_basis_beta_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_beta_stationary_cov(n_basis_beta_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_events_cov(coeff_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_events_cov(basis_types_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_events_cov(knots_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_events_cov(degrees_basis_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_events_cov(n_basis_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type penalization_events_cov(penalization_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coordinates_events(coordinates_eventsSEXP);
    Rcpp::traits::input_parameter< double >::type kernel_bandwith_events(kernel_bandwith_eventsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_beta_events_cov(knots_beta_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_beta_events_cov(degrees_basis_beta_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_beta_events_cov(n_basis_beta_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_stations_cov(coeff_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_stations_cov(basis_types_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_stations_cov(knots_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_stations_cov(degrees_basis_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_stations_cov(n_basis_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type penalization_stations_cov(penalization_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coordinates_stations(coordinates_stationsSEXP);
    Rcpp::traits::input_parameter< double >::type kernel_bandwith_stations(kernel_bandwith_stationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type knots_beta_stations_cov(knots_beta_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type degrees_basis_beta_stations_cov(degrees_basis_beta_stations_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::IntegerVector> >::type n_basis_beta_stations_cov(n_basis_beta_stations_covSEXP);
    Rcpp::traits::input_parameter< bool >::type bf_estimation(bf_estimationSEXP);
    Rcpp::traits::input_parameter< int >::type n_knots_smoothing(n_knots_smoothingSEXP);
    Rcpp::traits::input_parameter< int >::type n_intervals_trapezoidal_quadrature(n_intervals_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< double >::type target_error_trapezoidal_quadrature(target_error_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations_trapezoidal_quadrature(max_iterations_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< std::string >::type basis_type_y_points(basis_type_y_pointsSEXP);
    Rcpp::traits::input_parameter< std::string >::type basis_type_rec_weights_y_points(basis_type_rec_weights_y_pointsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_beta_stationary_cov(basis_types_beta_stationary_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_beta_events_cov(basis_types_beta_events_covSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::CharacterVector> >::type basis_types_beta_stations_cov(basis_types_beta_stations_covSEXP);
    rcpp_result_gen = Rcpp::wrap(FMSGWR_ESC_kami_testing(y_points, t_points, left_extreme_domain, right_extreme_domain, coeff_y_points, knots_y_points, degree_basis_y_points, n_basis_y_points, coeff_rec_weights_y_points, degree_basis_rec_weights_y_points, n_basis_rec_weights_y_points, coeff_stationary_cov, basis_types_stationary_cov, knots_stationary_cov, degrees_basis_stationary_cov, n_basis_stationary_cov, penalization_stationary_cov, knots_beta_stationary_cov, degrees_basis_beta_stationary_cov, n_basis_beta_stationary_cov, coeff_events_cov, basis_types_events_cov, knots_events_cov, degrees_basis_events_cov, n_basis_events_cov, penalization_events_cov, coordinates_events, kernel_bandwith_events, knots_beta_events_cov, degrees_basis_beta_events_cov, n_basis_beta_events_cov, coeff_stations_cov, basis_types_stations_cov, knots_stations_cov, degrees_basis_stations_cov, n_basis_stations_cov, penalization_stations_cov, coordinates_stations, kernel_bandwith_stations, knots_beta_stations_cov, degrees_basis_beta_stations_cov, n_basis_beta_stations_cov, bf_estimation, n_knots_smoothing, n_intervals_trapezoidal_quadrature, target_error_trapezoidal_quadrature, max_iterations_trapezoidal_quadrature, num_threads, basis_type_y_points, basis_type_rec_weights_y_points, basis_types_beta_stationary_cov, basis_types_beta_events_cov, basis_types_beta_stations_cov));
    return rcpp_result_gen;
END_RCPP
}
// predict_FMSGWR_ESC_kami_testing
Rcpp::List predict_FMSGWR_ESC_kami_testing(Rcpp::List coeff_stationary_cov_to_pred, Rcpp::List coeff_events_cov_to_pred, Rcpp::NumericMatrix coordinates_events_to_pred, Rcpp::List coeff_stations_cov_to_pred, Rcpp::NumericMatrix coordinates_stations_to_pred, int units_to_be_predicted, Rcpp::NumericVector abscissa_ev, Rcpp::List model_fitted, int n_knots_smoothing_pred, int n_intervals_trapezoidal_quadrature, double target_error_trapezoidal_quadrature, int max_iterations_trapezoidal_quadrature, Rcpp::Nullable<int> num_threads);
RcppExport SEXP _RcppKamiClusterTesting_predict_FMSGWR_ESC_kami_testing(SEXP coeff_stationary_cov_to_predSEXP, SEXP coeff_events_cov_to_predSEXP, SEXP coordinates_events_to_predSEXP, SEXP coeff_stations_cov_to_predSEXP, SEXP coordinates_stations_to_predSEXP, SEXP units_to_be_predictedSEXP, SEXP abscissa_evSEXP, SEXP model_fittedSEXP, SEXP n_knots_smoothing_predSEXP, SEXP n_intervals_trapezoidal_quadratureSEXP, SEXP target_error_trapezoidal_quadratureSEXP, SEXP max_iterations_trapezoidal_quadratureSEXP, SEXP num_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_stationary_cov_to_pred(coeff_stationary_cov_to_predSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_events_cov_to_pred(coeff_events_cov_to_predSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coordinates_events_to_pred(coordinates_events_to_predSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type coeff_stations_cov_to_pred(coeff_stations_cov_to_predSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type coordinates_stations_to_pred(coordinates_stations_to_predSEXP);
    Rcpp::traits::input_parameter< int >::type units_to_be_predicted(units_to_be_predictedSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type abscissa_ev(abscissa_evSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type model_fitted(model_fittedSEXP);
    Rcpp::traits::input_parameter< int >::type n_knots_smoothing_pred(n_knots_smoothing_predSEXP);
    Rcpp::traits::input_parameter< int >::type n_intervals_trapezoidal_quadrature(n_intervals_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< double >::type target_error_trapezoidal_quadrature(target_error_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations_trapezoidal_quadrature(max_iterations_trapezoidal_quadratureSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_FMSGWR_ESC_kami_testing(coeff_stationary_cov_to_pred, coeff_events_cov_to_pred, coordinates_events_to_pred, coeff_stations_cov_to_pred, coordinates_stations_to_pred, units_to_be_predicted, abscissa_ev, model_fitted, n_knots_smoothing_pred, n_intervals_trapezoidal_quadrature, target_error_trapezoidal_quadrature, max_iterations_trapezoidal_quadrature, num_threads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppKamiClusterTesting_installation_kami_testing", (DL_FUNC) &_RcppKamiClusterTesting_installation_kami_testing, 0},
    {"_RcppKamiClusterTesting_kami_testing", (DL_FUNC) &_RcppKamiClusterTesting_kami_testing, 0},
    {"_RcppKamiClusterTesting_FMSGWR_ESC_kami_testing", (DL_FUNC) &_RcppKamiClusterTesting_FMSGWR_ESC_kami_testing, 53},
    {"_RcppKamiClusterTesting_predict_FMSGWR_ESC_kami_testing", (DL_FUNC) &_RcppKamiClusterTesting_predict_FMSGWR_ESC_kami_testing, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppKamiClusterTesting(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
